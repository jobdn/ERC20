/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20, ERC20Interface } from "../ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtracredValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fa838038062001fa88339818101604052810190620000379190620001f3565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826004908051906020019062000090929190620000ba565b508160059080519060200190620000a9929190620000ba565b50806006819055505050506200040f565b828054620000c8906200031a565b90600052602060002090601f016020900481019282620000ec576000855562000138565b82601f106200010757805160ff191683800117855562000138565b8280016001018555821562000138579182015b82811115620001375782518255916020019190600101906200011a565b5b5090506200014791906200014b565b5090565b5b80821115620001665760008160009055506001016200014c565b5090565b6000620001816200017b84620002a4565b6200027b565b9050828152602081018484840111156200019a57600080fd5b620001a7848285620002e4565b509392505050565b600082601f830112620001c157600080fd5b8151620001d38482602086016200016a565b91505092915050565b600081519050620001ed81620003f5565b92915050565b6000806000606084860312156200020957600080fd5b600084015167ffffffffffffffff8111156200022457600080fd5b6200023286828701620001af565b935050602084015167ffffffffffffffff8111156200025057600080fd5b6200025e86828701620001af565b92505060406200027186828701620001dc565b9150509250925092565b6000620002876200029a565b905062000295828262000350565b919050565b6000604051905090565b600067ffffffffffffffff821115620002c257620002c1620003b5565b5b620002cd82620003e4565b9050602081019050919050565b6000819050919050565b60005b8381101562000304578082015181840152602081019050620002e7565b8381111562000314576000848401525b50505050565b600060028204905060018216806200033357607f821691505b602082108114156200034a576200034962000386565b5b50919050565b6200035b82620003e4565b810181811067ffffffffffffffff821117156200037d576200037c620003b5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6200040081620002da565b81146200040c57600080fd5b50565b611b89806200041f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c578063a9059cbb11610066578063a9059cbb14610238578063b09f126614610268578063d28d885214610286578063dd62ed3e146102a4576100cf565b806370a08231146101bc5780639dc29fac146101ec578063a457c2d714610208576100cf565b8063095ea7b3146100d457806318160ddd1461010457806323b872dd1461012257806332424aa314610152578063395093511461017057806340c10f19146101a0575b600080fd5b6100ee60048036038101906100e99190611558565b6102d4565b6040516100fb91906116bd565b60405180910390f35b61010c610438565b60405161011991906117ba565b60405180910390f35b61013c60048036038101906101379190611509565b610442565b60405161014991906116bd565b60405180910390f35b61015a6107a3565b60405161016791906117ba565b60405180910390f35b61018a60048036038101906101859190611558565b6107a9565b60405161019791906116bd565b60405180910390f35b6101ba60048036038101906101b59190611558565b61099b565b005b6101d660048036038101906101d191906114a4565b610b75565b6040516101e391906117ba565b60405180910390f35b61020660048036038101906102019190611558565b610bbd565b005b610222600480360381019061021d9190611558565b610e18565b60405161022f91906116bd565b60405180910390f35b610252600480360381019061024d9190611558565b6110c9565b60405161025f91906116bd565b60405180910390f35b6102706112d7565b60405161027d91906116d8565b60405180910390f35b61028e611365565b60405161029b91906116d8565b60405180910390f35b6102be60048036038101906102b991906114cd565b6113f3565b6040516102cb91906117ba565b60405180910390f35b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033e9061171a565b60405180910390fd5b82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161042591906117ba565b60405180910390a3600191505092915050565b6000600254905090565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ac9061171a565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054831115610536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052d9061177a565b60405180910390fd5b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548311156105f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec9061173a565b60405180910390fd5b826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106439190611847565b92505081905550826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461069891906117f1565b9250508190555082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461072b9190611847565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161078f91906117ba565b60405180910390a360019150509392505050565b60065481565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561081c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108139061171a565b60405180910390fd5b82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108a891906117f1565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161098891906117ba565b60405180910390a3600191505092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a229061179a565b60405180910390fd5b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a939061171a565b60405180910390fd5b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610aea91906117f1565b925050819055508160026000828254610b0391906117f1565b925050819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b6891906117ba565b60405180910390a3505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c449061179a565b60405180910390fd5b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb59061171a565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610d3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d369061175a565b60405180910390fd5b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d8d9190611847565b925050819055508160026000828254610da69190611847565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e0b91906117ba565b60405180910390a3505050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e829061171a565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054831115610f4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f41906116fa565b60405180910390fd5b82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fd69190611847565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516110b691906117ba565b60405180910390a3600191505092915050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561113c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111339061171a565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548311156111bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b49061177a565b60405180910390fd5b826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461120b9190611847565b92505081905550826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461126091906117f1565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516112c491906117ba565b60405180910390a3600191505092915050565b600580546112e4906118f6565b80601f0160208091040260200160405190810160405280929190818152602001828054611310906118f6565b801561135d5780601f106113325761010080835404028352916020019161135d565b820191906000526020600020905b81548152906001019060200180831161134057829003601f168201915b505050505081565b60048054611372906118f6565b80601f016020809104026020016040519081016040528092919081815260200182805461139e906118f6565b80156113eb5780601f106113c0576101008083540402835291602001916113eb565b820191906000526020600020905b8154815290600101906020018083116113ce57829003601f168201915b505050505081565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008135905061148981611b25565b92915050565b60008135905061149e81611b3c565b92915050565b6000602082840312156114b657600080fd5b60006114c48482850161147a565b91505092915050565b600080604083850312156114e057600080fd5b60006114ee8582860161147a565b92505060206114ff8582860161147a565b9150509250929050565b60008060006060848603121561151e57600080fd5b600061152c8682870161147a565b935050602061153d8682870161147a565b925050604061154e8682870161148f565b9150509250925092565b6000806040838503121561156b57600080fd5b60006115798582860161147a565b925050602061158a8582860161148f565b9150509250929050565b61159d8161188d565b82525050565b60006115ae826117d5565b6115b881856117e0565b93506115c88185602086016118c3565b6115d181611986565b840191505092915050565b60006115e96022836117e0565b91506115f482611997565b604082019050919050565b600061160c600c836117e0565b9150611617826119e6565b602082019050919050565b600061162f604b836117e0565b915061163a82611a0f565b606082019050919050565b60006116526021836117e0565b915061165d82611a84565b604082019050919050565b60006116756011836117e0565b915061168082611ad3565b602082019050919050565b60006116986011836117e0565b91506116a382611afc565b602082019050919050565b6116b7816118b9565b82525050565b60006020820190506116d26000830184611594565b92915050565b600060208201905081810360008301526116f281846115a3565b905092915050565b60006020820190508181036000830152611713816115dc565b9050919050565b60006020820190508181036000830152611733816115ff565b9050919050565b6000602082019050818103600083015261175381611622565b9050919050565b6000602082019050818103600083015261177381611645565b9050919050565b6000602082019050818103600083015261179381611668565b9050919050565b600060208201905081810360008301526117b38161168b565b9050919050565b60006020820190506117cf60008301846116ae565b92915050565b600081519050919050565b600082825260208201905092915050565b60006117fc826118b9565b9150611807836118b9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561183c5761183b611928565b5b828201905092915050565b6000611852826118b9565b915061185d836118b9565b9250828210156118705761186f611928565b5b828203905092915050565b600061188682611899565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156118e15780820151818401526020810190506118c6565b838111156118f0576000848401525b50505050565b6000600282049050600182168061190e57607f821691505b6020821081141561192257611921611957565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f416c6c6f7765642076616c756520746f207370656e64206c657373207468656e60008201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b7f5a65726f20616464726573730000000000000000000000000000000000000000600082015250565b7f43616e6e6f74207472616e73666572207375636820746f6b656e7320616d6f7560008201527f6e74206f7220796f752063616e6e6f74207370656e6420746f6b656e73206f6660208201527f2074686973206f776e6572000000000000000000000000000000000000000000604082015250565b7f5468657265206973206e6f207375636820616d6f756e74206f6620746f6b656e60008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b7f596f7520617265206e6f74206f776e6572000000000000000000000000000000600082015250565b611b2e8161187b565b8114611b3957600080fd5b50565b611b45816118b9565b8114611b5057600080fd5b5056fea2646970667358221220f0f8e5ccc3e0305100a9eefa0188fa134f625422f2212b8feb0f66dde6b53aac64736f6c63430008040033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20";
  }

  deploy(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20> {
    return super.deploy(
      name,
      symbol,
      decimals,
      overrides || {}
    ) as Promise<ERC20>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, decimals, overrides || {});
  }
  attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }
  static readonly contractName: "ERC20";
  public readonly contractName: "ERC20";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
